{"version":3,"sources":["components/menu/menu.jsx","components/register/Register.jsx","components/campo-funcionario/CampoFuncionario.jsx","components/campo-epis/CampoEpis.jsx","components/entrega-epi/EntregaEpi.jsx","components/login/login.jsx","App.js","serviceWorker.js","index.js","logo.svg"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","menuButtom","padding","cursor","ButtonAppBar","classes","className","AppBar","position","Toolbar","Typography","variant","Button","color","body","backgroundColor","palette","common","white","paper","marginTop","display","flexDirection","alignItems","avatar","margin","secondary","main","form","width","submit","select","fontSize","CampoFuncionario","handleFuncionario","funcionario","React","useState","companiesList","setList","useTheme","useEffect","fetch","then","response","json","data","map","value","funcionario_id","label","matricula","nome","list","maxMenuHeight","styles","menu","provided","zIndex","borderRadius","colors","primary25","primary","baseUnit","TextFieldProps","placeholder","options","onChange","CampoEpis","handleEpi","codigoEpi","epi","epi_id","codigo_epi","descricao","formControl","SignUp","inputLabel","useRef","labelWidth","setLabelWidth","current","offsetWidth","tipoEpi","motivo","state","setState","quantidade","setQuantidade","open","setOpen","handleChange","name","event","target","handleClose","clearState","clearSelect","Container","component","maxWidth","CssBaseline","onSubmit","preventDefault","Grid","container","item","xs","FormControl","required","fullWidth","autoComplete","InputLabel","ref","Select","native","inputProps","id","TextField","test","type","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","onClick","autoFocus","Copyright","align","Link","href","Date","getFullYear","createMuiTheme","SignIn","handleOnSignIn","email","setEmail","password","setPassword","error","setError","Avatar","noValidate","evt","method","headers","JSON","stringify","e","helperText","FormControlLabel","control","Checkbox","Box","mt","App","user","loggedIn","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.7df4952b.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\n//cadastro de funcionario, entrega de EPI.\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButtom: {\r\n        padding: '10px',\r\n        cursor: \"pointer\"\r\n    }\r\n}));\r\n\r\nexport default function ButtonAppBar() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        <Button color=\"inherit\">Entrega de EPI</Button>\r\n                        <Button color=\"inherit\">Cadastro de func.</Button>\r\n                    </Typography>\r\n                    {/* <Button color=\"inherit\">Login</Button> */}\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}","import React, {useState, Fragment} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport {KeyboardDatePicker} from '@material-ui/pickers/';\r\n// import { MuiPickersUtilsProvider, InlineDatePicker } from \"material-ui-pickers\";\r\n\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport 'date-fns';\r\n\r\n// const Date = () => {\r\n\r\n    \r\n    \r\n//     return (\r\n        \r\n//     );\r\n// }\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    '@global': {\r\n        body: {\r\n            backgroundColor: theme.palette.common.white,\r\n        },\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function SignUp() {\r\n    const classes = useStyles();\r\n\r\n    const [selectedDate, setSelectedDate] = React.useState(new Date('2014-08-18T21:11:54'));\r\n\r\n    const handleDateChange = date => {\r\n        setSelectedDate(date);\r\n    };\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Cadastrar\r\n        </Typography>\r\n                <form className={classes.form} noValidate>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} >\r\n                            <TextField\r\n                                autoComplete=\"fname\"\r\n                                name=\"name\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"firstName\"\r\n                                label=\"Nome\"\r\n                                autoFocus\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} >\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"lastName\"\r\n                                label=\"Matrícula\"\r\n                                name=\"lastName\"\r\n                                autoComplete=\"lname\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"email\"\r\n                                label=\"Cargo\"\r\n                                name=\"email\"\r\n                                autoComplete=\"email\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                        <input id=\"date\" type=\"date\"/>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <FormControlLabel\r\n                                control={<Checkbox value=\"isAdmin\" color=\"primary\" />}\r\n                                label=\"Autorizdor.\"\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Cadastar\r\n          </Button>\r\n           \r\n                </form>\r\n            </div>\r\n\r\n        </Container>\r\n    );\r\n}","import React, { useEffect } from 'react';\r\nimport Select from 'react-select';\r\nimport { emphasize, makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  },\r\n  select: {\r\n    fontSize: \"1.2em\",\r\n  }\r\n}));\r\n\r\n\r\n\r\nexport default function CampoFuncionario({ handleFuncionario, funcionario }) {\r\n\r\n\r\n  const [companiesList, setList] = React.useState([]);\r\n\r\n\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [value, setValue] = React.useState(null);\r\n\r\n  const handleChange = value => {\r\n    handleFuncionario(value);\r\n  };\r\n\r\n\r\n\r\n  const funcionarios = () => {\r\n    return fetch('https://www.jeancarlos.website/funcionarios')\r\n      .then(response => response.json())\r\n      .then(({ data }) => {\r\n        return data.map(funcionario => ({\r\n          value: `${funcionario.funcionario_id}`,\r\n          label: `${funcionario.matricula} - ${funcionario.nome}`,\r\n        }))\r\n      })\r\n      .then(list => {\r\n        setList(list)\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    funcionarios();\r\n  }, []);\r\n\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Select className={classes.select}\r\n      value= {funcionario}\r\n        maxMenuHeight={390}\r\n        styles={{\r\n          menu: provided => ({ ...provided, zIndex: 9999 })\r\n        }}\r\n        theme={(theme) => ({\r\n          ...theme,\r\n          borderRadius: 5,\r\n          colors: {\r\n            ...theme.colors,\r\n            primary25: '#D8D6D9',\r\n            primary: '#3f51b5'\r\n          },\r\n          spacing: {\r\n            baseUnit: 8.5,\r\n          }\r\n        })}\r\n\r\n        TextFieldProps={{\r\n          label: 'Funcionario'\r\n        }}\r\n        placeholder=\"Selecionar Funcionário\"\r\n        options={companiesList}\r\n        onChange={handleChange}\r\n      />\r\n    </div>\r\n  );\r\n}","import React, {useEffect} from 'react';\r\nimport Select from 'react-select';\r\nimport { emphasize, makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root:{\r\n  },\r\n  select: {\r\n    fontSize: \"1.2em\",\r\n  }\r\n}));\r\n\r\n\r\n\r\nexport default function CampoEpis({handleEpi, codigoEpi}) {\r\n\r\n\r\n  const [companiesList, setList] = React.useState([]);\r\n\r\n\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [value, setValue] = React.useState(null);\r\n\r\n  const handleChange = value => {\r\n    handleEpi(value)\r\n  };\r\n\r\n \r\n\r\n  const funcionarios = () => {\r\n    return fetch('https://www.jeancarlos.website/epis')\r\n      .then(response => response.json())\r\n      .then(({ data }) => {\r\n        return data.map(epi => ({\r\n          value: `${epi.epi_id}`,\r\n          label: `${epi.codigo_epi} - ${epi.descricao}`,\r\n        }))\r\n      })\r\n      .then(list => {\r\n        setList(list)\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    funcionarios();\r\n  }, []);\r\n\r\n\r\n\r\n  return (\r\n    <div className={classes.root} >\r\n        <Select className={classes.select}\r\n        value={codigoEpi}\r\n         styles={{\r\n          menu: provided => ({ ...provided, zIndex: 9999 })\r\n        }}\r\n        maxMenuHeight={390}\r\n         theme={(theme) => ({\r\n          ...theme,\r\n          borderRadius: 5,\r\n          colors: {\r\n          ...theme.colors,\r\n            primary25: '#D8D6D9',\r\n            primary: '#3f51b5'\r\n          },\r\n          spacing: {\r\n            baseUnit: 8.5,\r\n            }\r\n        })}\r\n\r\n          TextFieldProps={{\r\n            label: 'Funcionario'\r\n          }}\r\n          placeholder=\"Selecionar Código/Nome\"\r\n          options={companiesList}\r\n          onChange={handleChange}\r\n        />\r\n    </div>\r\n  );\r\n}","import React, { useState, Fragment } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport { KeyboardDatePicker } from '@material-ui/pickers/';\r\n// import { MuiPickersUtilsProvider, InlineDatePicker } from \"material-ui-pickers\";\r\n\r\nimport 'date-fns';\r\n\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport CampoFuncionario from \"../campo-funcionario/CampoFuncionario\"\r\nimport CampoEpis from \"../campo-epis/CampoEpis\"\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    '@global': {\r\n        body: {\r\n            backgroundColor: theme.palette.common.white,\r\n        },\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(0),\r\n        width: '100%',\r\n    },\r\n}));\r\n\r\n\r\nexport default function SignUp() {\r\n    const classes = useStyles();\r\n\r\n    const inputLabel = React.useRef(null);\r\n    const [labelWidth, setLabelWidth] = React.useState(0);\r\n    React.useEffect(() => {\r\n        setLabelWidth(inputLabel.current.offsetWidth);\r\n    }, []);\r\n\r\n    const [state, setState] = React.useState({\r\n        tipoEpi: '',\r\n        codigoEpi: '',\r\n        funcionario: '',\r\n        motivo: '',\r\n    });\r\n\r\n    const [quantidade, setQuantidade] = React.useState('');\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleChangeQuantidade = event => {\r\n        const re = /^[0-9\\b]+$/;\r\n        if (event.target.value === '' || re.test(event.target.value)) {\r\n            setQuantidade(event.target.value);\r\n        }\r\n    }\r\n\r\n\r\n    const handleChange = name => event => {\r\n        setState({\r\n            ...state,\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const subTipo = () => {\r\n        if (state.tipoEpi === \"1\") {\r\n            return (\r\n                <Fragment>\r\n                    <option value=\"\" />\r\n                    <option value={1}>1</option>\r\n                    <option value={2}>2</option>\r\n                    <option value={3}>3</option>\r\n                    <option value={4}>4</option>\r\n                    <option value={5}>5</option>\r\n                    <option value={6}>6</option>\r\n                    <option value={7}>7</option>\r\n                    <option value={8}>8</option>\r\n                </Fragment>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <Fragment>\r\n                    <option value=\"\" />\r\n                </Fragment>)\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (state.funcionario !== \"\" && state.codigoEpi !== \"\") {\r\n            clearState();\r\n            handleOpen();\r\n            clearSelect();\r\n        }\r\n    }\r\n\r\n    const clearState = () => {\r\n        setState({\r\n            ...state,\r\n            tipoEpi: '',\r\n            codigoEpi: '',\r\n            funcionario: '',\r\n            motivo: '',\r\n        });\r\n        setQuantidade('');\r\n    }\r\n\r\n    const clearSelect = () => {\r\n\r\n    }\r\n\r\n    const handleFuncionario = (value) => {\r\n        setState({\r\n            ...state,\r\n            funcionario: value,\r\n        })\r\n    }\r\n\r\n    const handleEpi = (value) => {\r\n        setState({\r\n            ...state,\r\n            codigoEpi: value,\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Entrega de EPI\r\n        </Typography>\r\n                <form className={classes.form} onSubmit={handleSubmit}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            <FormControl\r\n                                variant={\"outlined\"}\r\n                                className={classes.formControl}\r\n                                required\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                autoComplete=\"fname\">\r\n                                <InputLabel ref={inputLabel} >\r\n                                    Tipo EPI\r\n                                  </InputLabel>\r\n                                <Select\r\n                                    native\r\n                                    required\r\n                                    value={state.tipoEpi}\r\n                                    onChange={handleChange('tipoEpi')}\r\n                                    labelWidth={labelWidth}\r\n                                    inputProps={{\r\n                                        id: 'tipoEpi',\r\n                                    }}>\r\n                                    <option value=\"\" />\r\n                                    <option value={1}>PROTEÇÃO DA CABEÇA</option>\r\n                                    <option value={2}>PROTEÇÃO DOS OLHOS E FACE</option>\r\n                                    <option value={3}>PROTEÇÃO RESPIRATÓRIA</option>\r\n                                    <option value={4}>PROTEÇÃO DO TRONCO</option>\r\n                                    <option value={5}>PROTEÇÃO DOS MEMBROS SUPERIORES</option>\r\n                                    <option value={6}>PROTEÇÃO DOS MEMBROS INFERIORES</option>\r\n                                    <option value={7}>PROTEÇÃO DO CORPO INTEIRO</option>\r\n                                    <option value={8}>PROTEÇÃO CONTRA QUEDAS COM DIFERENÇA DE NÍVEL</option>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={9}>\r\n                            <CampoEpis required handleEpi={handleEpi} codigoEpi={state.codigoEpi} />\r\n                        </Grid>\r\n                        <Grid item xs={3} >\r\n                            <TextField\r\n                                value={quantidade}\r\n                                onChange={handleChangeQuantidade}\r\n                                autoComplete=\"fname\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"quantidade\"\r\n                                label=\"Quant.\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <CampoFuncionario handleFuncionario={handleFuncionario} funcionario={state.funcionario} />\r\n                        </Grid>\r\n                        <Grid item xs={12} >\r\n                            <FormControl\r\n                                variant={\"outlined\"}\r\n                                className={classes.formControl}\r\n                                required\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                autoComplete=\"fname\">\r\n                                <InputLabel ref={inputLabel} >\r\n                                    Motivo\r\n                                  </InputLabel>\r\n                                <Select\r\n                                    native\r\n                                    value={state.motivo}\r\n                                    onChange={handleChange('motivo')}\r\n                                    labelWidth={labelWidth}\r\n                                    inputProps={{\r\n                                        id: 'motivo',\r\n                                    }}>\r\n                                    <option value=\"\" />\r\n                                    <option value={1}>Perda (deixou em local incorreto)</option>\r\n                                    <option value={2}>Perda (extravio)</option>\r\n                                    <option value={3}>Substituição por uso</option>\r\n                                    <option value={4}>Danificado</option>\r\n                                    <option value={5}>Recebimento</option>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Salvar\r\n                </Button>\r\n                    <Dialog\r\n                        open={open}\r\n                        onClose={handleClose}>\r\n                        <DialogTitle id=\"alert-dialog-title\">{\"Dados salvos\"}</DialogTitle>\r\n                        <DialogContent>\r\n                            <DialogContentText id=\"alert-dialog-description\">\r\n                                Saída de EPI realizada com sucesso\r\n                        </DialogContentText>\r\n                        </DialogContent>\r\n                        <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n                            OK\r\n          </Button>\r\n                    </Dialog>\r\n\r\n                </form>\r\n            </div>\r\n\r\n        </Container>\r\n    );\r\n}","import React, { useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nimport { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\n\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Empresa\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  \"@global\": {\r\n    body: {\r\n      backgroundColor: theme.palette.common.white\r\n    }\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\"\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: \"#3f51b5\"\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  }\r\n}));\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: { main: \"#009688\" }, // Purple and green play nicely together.\r\n    secondary: { main: \"#11cb5f\" } // This is just green.A700 as hex.\r\n  }\r\n});\r\n\r\nexport default function SignIn({ handleOnSignIn }) {\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n\r\n  const handleLogin = (evt) => {\r\n    evt.preventDefault();\r\n    fetch('https://www.jeancarlos.website/signin', {\r\n      method: 'post',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        email: email,\r\n        password: password\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then((data) => {\r\n        if (data.id) {\r\n          handleOnSignIn(data.id);\r\n        }\r\n        else{\r\n          setError(true);\r\n        }\r\n      }\r\n      )\r\n  }\r\n\r\n\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Acesso Restrito\r\n          </Typography>\r\n        <form className={classes.form} noValidate onSubmit={handleLogin}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Endereço de e-mail\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            onChange={e => {\r\n              setEmail(e.target.value)\r\n              setError(false);\r\n            }}\r\n\r\n            error={error}\r\n\r\n            helperText={email === \"\" && error ? 'Campo vazio' : ''}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            label=\"Senha\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            onChange={e => {\r\n              setPassword(e.target.value)\r\n              setError(false);\r\n            }}\r\n\r\n            error={error}\r\n            helperText={setError ? 'Usuário ou senha inválidos.' : ''}\r\n            helperText={password === \"\" && error ? 'Campo vazio' : ''}\r\n          />\r\n\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Lembrar dados\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Entrar\r\n            </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Esqueceu a senha?\r\n                </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                {\"Registre-se\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","import React, {Component} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Menu from \"./components/menu/menu\"\nimport Register from \"./components/register/Register\"\nimport EntregaEpi from \"./components/entrega-epi/EntregaEpi\"\nimport Login from \"./components/login/login\"\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      loggedIn: false,\n      user: {\n        id: 0,\n      }\n    }\n  }\n\n  handleOnSignIn = (id) => {\n    this.setState({\n      user: {\n        id\n      }\n    }\n    );\n\n    this.setState({ loggedIn: true });\n  }\n\n\n\n  render() {\n    // return <SelectPage />\n    if (this.state.loggedIn) {\n      // return <Drawer />;\n      return <div>\n        <Menu />\n        <EntregaEpi />\n      </div>;\n    }\n    else {\n      return <Login handleOnSignIn={this.handleOnSignIn} />;\n    }\n\n  }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";"],"sourceRoot":""}